{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Convert Method Contract",
  "description": "JSON-RPC contract for data conversion operations",

  "request": {
    "type": "object",
    "required": ["jsonrpc", "id", "method", "params"],
    "properties": {
      "jsonrpc": {
        "type": "string",
        "const": "2.0"
      },
      "id": {
        "type": "string",
        "description": "Unique request identifier"
      },
      "method": {
        "type": "string",
        "const": "convert"
      },
      "params": {
        "type": "object",
        "required": ["input_path", "output_path"],
        "properties": {
          "input_path": {
            "type": "string",
            "description": "Path to input data file"
          },
          "output_path": {
            "type": "string",
            "description": "Path for output NWB file",
            "pattern": "\\.nwb$"
          },
          "data_format": {
            "type": "string",
            "enum": ["spike2", "nwb", "mea", "calcium", "ephys"],
            "description": "Input data format (optional, auto-detected if omitted)"
          },
          "mode": {
            "type": "string",
            "enum": ["automatic", "manual"],
            "default": "automatic",
            "description": "Conversion mode"
          },
          "session_id": {
            "type": "string",
            "description": "Session ID for context"
          },
          "metadata": {
            "type": "object",
            "description": "Additional metadata",
            "additionalProperties": true
          },
          "validate_output": {
            "type": "boolean",
            "default": true,
            "description": "Validate NWB file after conversion"
          },
          "overwrite": {
            "type": "boolean",
            "default": false,
            "description": "Overwrite existing output file"
          },
          "stream": {
            "type": "boolean",
            "default": false,
            "description": "Enable streaming progress updates"
          }
        }
      }
    }
  },

  "response_success": {
    "type": "object",
    "required": ["jsonrpc", "id", "result"],
    "properties": {
      "jsonrpc": {
        "type": "string",
        "const": "2.0"
      },
      "id": {
        "type": "string",
        "description": "Matches request id"
      },
      "result": {
        "type": "object",
        "required": ["status", "conversion_id", "input_path", "started_at", "completed_at"],
        "properties": {
          "status": {
            "type": "string",
            "enum": ["success", "failed", "partial"]
          },
          "conversion_id": {
            "type": "string",
            "description": "Unique conversion identifier"
          },
          "input_path": {
            "type": "string"
          },
          "output_path": {
            "type": ["string", "null"],
            "description": "Path to output file (null if failed)"
          },
          "started_at": {
            "type": "string",
            "format": "date-time"
          },
          "completed_at": {
            "type": "string",
            "format": "date-time"
          },
          "validation": {
            "type": ["object", "null"],
            "properties": {
              "valid": {
                "type": "boolean"
              },
              "errors": {
                "type": "array",
                "items": {"type": "string"}
              },
              "warnings": {
                "type": "array",
                "items": {"type": "string"}
              }
            }
          },
          "metrics": {
            "type": ["object", "null"],
            "properties": {
              "duration_seconds": {"type": "number"},
              "input_size_bytes": {"type": "integer"},
              "output_size_bytes": {"type": "integer"},
              "records_processed": {"type": "integer"}
            }
          },
          "errors": {
            "type": "array",
            "items": {"type": "string"}
          },
          "warnings": {
            "type": "array",
            "items": {"type": "string"}
          },
          "suggestions": {
            "type": "array",
            "items": {"type": "string"},
            "description": "Suggested fixes for errors"
          },
          "session_id": {
            "type": ["string", "null"]
          }
        }
      }
    }
  },

  "response_error": {
    "type": "object",
    "required": ["jsonrpc", "id", "error"],
    "properties": {
      "jsonrpc": {
        "type": "string",
        "const": "2.0"
      },
      "id": {
        "type": "string",
        "description": "Matches request id"
      },
      "error": {
        "type": "object",
        "required": ["code", "message"],
        "properties": {
          "code": {
            "type": "integer",
            "description": "JSON-RPC error code"
          },
          "message": {
            "type": "string",
            "description": "Error message"
          },
          "data": {
            "type": "object",
            "properties": {
              "error_type": {
                "type": "string",
                "enum": ["validation_error", "conversion_error", "server_error"]
              },
              "details": {
                "type": "object",
                "additionalProperties": true
              },
              "suggestions": {
                "type": "array",
                "items": {"type": "string"}
              },
              "retry_after": {
                "type": ["integer", "null"],
                "description": "Seconds to wait before retry"
              },
              "is_retryable": {
                "type": "boolean"
              }
            }
          }
        }
      }
    }
  },

  "streaming_progress": {
    "description": "Progress updates when stream=true",
    "type": "object",
    "required": ["jsonrpc", "method", "params"],
    "properties": {
      "jsonrpc": {
        "type": "string",
        "const": "2.0"
      },
      "method": {
        "type": "string",
        "const": "progress"
      },
      "params": {
        "type": "object",
        "required": ["conversion_id", "update"],
        "properties": {
          "conversion_id": {
            "type": "string"
          },
          "update": {
            "type": "object",
            "required": ["stage", "stage_description", "percent_complete", "current_step", "total_steps", "message", "timestamp"],
            "properties": {
              "stage": {
                "type": "string",
                "enum": ["initializing", "analyzing", "converting", "validating", "evaluating", "completed", "failed"]
              },
              "stage_description": {
                "type": "string"
              },
              "percent_complete": {
                "type": "number",
                "minimum": 0,
                "maximum": 100
              },
              "current_step": {
                "type": "integer",
                "minimum": 1
              },
              "total_steps": {
                "type": "integer",
                "minimum": 1
              },
              "message": {
                "type": "string"
              },
              "timestamp": {
                "type": "string",
                "format": "date-time"
              },
              "details": {
                "type": ["object", "null"],
                "additionalProperties": true
              },
              "current_agent": {
                "type": ["string", "null"],
                "enum": [null, "orchestrator", "analysis", "conversion", "evaluation"]
              }
            }
          },
          "retry_count": {
            "type": "integer",
            "minimum": 0,
            "default": 0
          },
          "is_retry": {
            "type": "boolean",
            "default": false
          }
        }
      }
    }
  },

  "examples": {
    "request_basic": {
      "jsonrpc": "2.0",
      "id": "req-001",
      "method": "convert",
      "params": {
        "input_path": "/data/experiment_001.spike2",
        "output_path": "/data/output/experiment_001.nwb"
      }
    },
    "request_full": {
      "jsonrpc": "2.0",
      "id": "req-002",
      "method": "convert",
      "params": {
        "input_path": "/data/experiment_001.spike2",
        "output_path": "/data/output/experiment_001.nwb",
        "data_format": "spike2",
        "mode": "automatic",
        "metadata": {
          "experimenter": "Jane Doe",
          "lab": "Neuroscience Lab"
        },
        "validate_output": true,
        "overwrite": false,
        "stream": true
      }
    },
    "response_success": {
      "jsonrpc": "2.0",
      "id": "req-001",
      "result": {
        "status": "success",
        "conversion_id": "conv-123e4567",
        "input_path": "/data/experiment_001.spike2",
        "output_path": "/data/output/experiment_001.nwb",
        "started_at": "2025-10-06T12:00:00Z",
        "completed_at": "2025-10-06T12:05:30Z",
        "validation": {
          "valid": true,
          "errors": [],
          "warnings": ["Missing optional field: session_description"]
        },
        "metrics": {
          "duration_seconds": 330.5,
          "input_size_bytes": 1048576,
          "output_size_bytes": 2097152,
          "records_processed": 10000
        },
        "errors": [],
        "warnings": [],
        "suggestions": [],
        "session_id": null
      }
    },
    "response_error": {
      "jsonrpc": "2.0",
      "id": "req-002",
      "error": {
        "code": -32602,
        "message": "Invalid params: input file not found",
        "data": {
          "error_type": "validation_error",
          "details": {
            "file_path": "/data/missing.spike2"
          },
          "suggestions": [
            "Check if the file path is correct",
            "Ensure the file exists and is accessible"
          ],
          "retry_after": null,
          "is_retryable": false
        }
      }
    },
    "streaming_progress": {
      "jsonrpc": "2.0",
      "method": "progress",
      "params": {
        "conversion_id": "conv-123e4567",
        "update": {
          "stage": "converting",
          "stage_description": "Converting spike2 data to NWB format",
          "percent_complete": 45.5,
          "current_step": 3,
          "total_steps": 5,
          "message": "Processing channel 2/4",
          "timestamp": "2025-10-06T12:02:30Z",
          "details": {
            "channel": 2,
            "total_channels": 4
          },
          "current_agent": "conversion"
        },
        "retry_count": 0,
        "is_retry": false
      }
    }
  }
}
