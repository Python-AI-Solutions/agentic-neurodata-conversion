{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://github.com/Python-AI-Solutions/agentic-neurodata-conversion/schemas/testing.json",
  "title": "TestSuite",
  "description": "Categorized collection of tests with execution profiles and quality requirements",
  "type": "object",
  "required": ["name", "test_type", "markers", "fixtures", "coverage_threshold"],
  "properties": {
    "name": {
      "type": "string",
      "description": "Test suite identifier",
      "pattern": "^[a-z][a-z0-9_]*$",
      "minLength": 3,
      "maxLength": 50,
      "examples": ["mcp_server_unit", "agent_integration", "e2e_conversion"]
    },
    "test_type": {
      "type": "string",
      "description": "Primary test category",
      "enum": ["unit", "integration", "e2e", "performance", "security"],
      "examples": ["unit", "integration"]
    },
    "markers": {
      "type": "array",
      "description": "Pytest markers for test selection",
      "items": {
        "type": "string",
        "enum": [
          "unit", "integration", "e2e",
          "fast", "slow",
          "requires_llm", "requires_datasets", "requires_docker",
          "mock_llm", "cheap_api", "frontier_api",
          "mcp_server", "agents", "data_management", "client"
        ]
      },
      "minItems": 1,
      "uniqueItems": true,
      "examples": [
        ["unit", "mcp_server"],
        ["integration", "agents", "requires_llm", "cheap_api"]
      ]
    },
    "fixtures": {
      "type": "array",
      "description": "Required test fixtures from conftest.py",
      "items": {
        "type": "string",
        "pattern": "^[a-z][a-z0-9_]*$"
      },
      "uniqueItems": true,
      "examples": [
        ["mock_agent", "test_config"],
        ["test_dataset", "llm_client"]
      ]
    },
    "coverage_threshold": {
      "type": "number",
      "description": "Minimum code coverage percentage required (0-100)",
      "minimum": 0,
      "maximum": 100,
      "examples": [80.0, 75.0]
    },
    "execution_profile": {
      "type": "object",
      "description": "Execution characteristics and requirements",
      "properties": {
        "max_duration_seconds": {
          "type": "integer",
          "description": "Maximum allowed test execution time",
          "minimum": 1,
          "examples": [300, 900, 1800]
        },
        "parallel_execution": {
          "type": "boolean",
          "description": "Whether tests can run in parallel",
          "default": true
        },
        "requires_isolation": {
          "type": "boolean",
          "description": "Whether tests require isolated environment",
          "default": false
        },
        "retry_on_failure": {
          "type": "boolean",
          "description": "Whether to retry failed tests",
          "default": false
        }
      }
    },
    "test_files": {
      "type": "array",
      "description": "Test file paths relative to tests/ directory",
      "items": {
        "type": "string",
        "pattern": "^(unit|integration|e2e|performance|security)/.*\\.py$"
      },
      "uniqueItems": true,
      "examples": [
        ["unit/mcp_server/test_tools.py", "unit/mcp_server/test_registry.py"],
        ["integration/agents/test_conversation.py"]
      ]
    },
    "dependencies": {
      "type": "array",
      "description": "Other test suites that must pass before this one",
      "items": {
        "type": "string"
      },
      "uniqueItems": true,
      "examples": [["mcp_server_unit"], ["agent_unit", "config_unit"]]
    }
  },
  "additionalProperties": false,
  "allOf": [
    {
      "if": {
        "properties": {"test_type": {"const": "unit"}}
      },
      "then": {
        "properties": {
          "coverage_threshold": {"minimum": 80.0},
          "execution_profile": {
            "properties": {
              "max_duration_seconds": {"maximum": 300}
            }
          }
        }
      }
    },
    {
      "if": {
        "properties": {"test_type": {"const": "integration"}}
      },
      "then": {
        "properties": {
          "coverage_threshold": {"minimum": 75.0},
          "execution_profile": {
            "properties": {
              "max_duration_seconds": {"maximum": 900}
            }
          }
        }
      }
    }
  ],
  "examples": [
    {
      "name": "mcp_server_unit",
      "test_type": "unit",
      "markers": ["unit", "mcp_server"],
      "fixtures": ["mock_agent", "test_config"],
      "coverage_threshold": 85.0,
      "execution_profile": {
        "max_duration_seconds": 300,
        "parallel_execution": true,
        "requires_isolation": false,
        "retry_on_failure": false
      },
      "test_files": [
        "unit/mcp_server/test_tools.py",
        "unit/mcp_server/test_registry.py"
      ],
      "dependencies": []
    },
    {
      "name": "agent_integration",
      "test_type": "integration",
      "markers": ["integration", "agents", "slow"],
      "fixtures": ["test_dataset", "llm_client", "agent_registry"],
      "coverage_threshold": 75.0,
      "execution_profile": {
        "max_duration_seconds": 900,
        "parallel_execution": false,
        "requires_isolation": true,
        "retry_on_failure": true
      },
      "test_files": [
        "integration/agents/test_conversation_flow.py"
      ],
      "dependencies": ["mcp_server_unit", "agent_unit"]
    }
  ],
  "definitions": {
    "validation_rules": {
      "description": "Test suite validation requirements",
      "rules": [
        "Coverage threshold MUST be >= 80% for unit tests",
        "Coverage threshold MUST be >= 75% for integration tests",
        "Test execution time MUST be <5min for unit, <15min for integration",
        "Markers MUST be registered in pyproject.toml [tool.pytest.ini_options]",
        "Fast feedback profile: unit tests without slow/requires_* markers",
        "Integration profile: integration tests without expensive resource markers",
        "Full suite: all tests including slow and resource-dependent tests"
      ]
    },
    "execution_profiles": {
      "fast_feedback": "pytest -m 'unit and not slow and not requires_llm and not requires_datasets' (< 5 min)",
      "integration_check": "pytest -m 'integration and not requires_llm and not slow' (< 15 min)",
      "full_suite": "pytest -m '' (< 30 min)",
      "nightly": "pytest -m 'slow or requires_datasets or frontier_api' (< 2 hours)"
    }
  }
}
