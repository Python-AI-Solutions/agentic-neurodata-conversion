{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "WebSocket Events Specification",
  "description": "Real-time progress updates via WebSocket connection (Story 10.5, Research Decision 3)",
  "version": "1.0.0",
  "connection": {
    "endpoint": "ws://localhost:8080/ws",
    "protocol": "Native WebSocket (not Socket.IO)",
    "authentication": "None (local deployment)",
    "client_library": "Native browser WebSocket API"
  },
  "message_format": {
    "description": "All messages are JSON objects conforming to WebSocketMessage schema",
    "schema": {
      "type": "object",
      "required": ["type", "message", "timestamp"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["progress", "stage_update", "notification", "error"],
          "description": "Message category"
        },
        "message": {
          "type": "string",
          "description": "Human-readable message for UI display"
        },
        "stage": {
          "type": "string",
          "enum": ["conversion", "evaluation", "report_generation"],
          "nullable": true,
          "description": "Current pipeline stage (if applicable)"
        },
        "status": {
          "type": "string",
          "enum": ["pending", "in_progress", "completed", "failed"],
          "nullable": true,
          "description": "Stage status (if applicable)"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "ISO 8601 timestamp"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": true,
          "description": "Optional event-specific data"
        }
      }
    }
  },
  "event_types": {
    "progress": {
      "description": "General progress updates during conversion/evaluation",
      "examples": [
        {
          "type": "progress",
          "message": "Scanning uploaded files...",
          "stage": "conversion",
          "status": "in_progress",
          "timestamp": "2025-10-15T10:00:05Z",
          "metadata": {}
        },
        {
          "type": "progress",
          "message": "Detected format: SpikeGLX (confidence: 0.95)",
          "stage": "conversion",
          "status": "in_progress",
          "timestamp": "2025-10-15T10:00:08Z",
          "metadata": {
            "format": "SpikeGLX",
            "confidence": 0.95
          }
        },
        {
          "type": "progress",
          "message": "Converting to NWB format...",
          "stage": "conversion",
          "status": "in_progress",
          "timestamp": "2025-10-15T10:00:15Z",
          "metadata": {}
        },
        {
          "type": "progress",
          "message": "Running NWB Inspector validation...",
          "stage": "evaluation",
          "status": "in_progress",
          "timestamp": "2025-10-15T10:05:20Z",
          "metadata": {}
        }
      ]
    },
    "stage_update": {
      "description": "Pipeline stage transitions (Story 2.2)",
      "examples": [
        {
          "type": "stage_update",
          "message": "Conversion stage started",
          "stage": "conversion",
          "status": "in_progress",
          "timestamp": "2025-10-15T10:00:00Z",
          "metadata": {}
        },
        {
          "type": "stage_update",
          "message": "Conversion stage completed",
          "stage": "conversion",
          "status": "completed",
          "timestamp": "2025-10-15T10:05:00Z",
          "metadata": {
            "output_path": "/outputs/mouse_001.nwb",
            "file_size_bytes": 15728640,
            "duration_seconds": 300
          }
        },
        {
          "type": "stage_update",
          "message": "Evaluation stage started",
          "stage": "evaluation",
          "status": "in_progress",
          "timestamp": "2025-10-15T10:05:05Z",
          "metadata": {}
        }
      ]
    },
    "notification": {
      "description": "User-facing notifications from Conversation Agent (Story 4.8)",
      "categories": {
        "info": "General informational messages",
        "awaiting_user": "System waiting for user decision",
        "success": "Operation completed successfully",
        "warning": "Non-critical issues"
      },
      "examples": [
        {
          "type": "notification",
          "message": "Conversion started",
          "stage": null,
          "status": null,
          "timestamp": "2025-10-15T09:59:55Z",
          "metadata": {
            "category": "info"
          }
        },
        {
          "type": "notification",
          "message": "Validation in progress",
          "stage": "evaluation",
          "status": "in_progress",
          "timestamp": "2025-10-15T10:05:10Z",
          "metadata": {
            "category": "info"
          }
        },
        {
          "type": "notification",
          "message": "Validation failed - review needed",
          "stage": "evaluation",
          "status": "completed",
          "timestamp": "2025-10-15T10:07:00Z",
          "metadata": {
            "category": "warning",
            "validation_status": "FAILED",
            "issue_counts": {
              "CRITICAL": 2,
              "ERROR": 5
            }
          }
        },
        {
          "type": "notification",
          "message": "Validation passed with warnings - review recommended",
          "stage": "evaluation",
          "status": "completed",
          "timestamp": "2025-10-15T10:07:00Z",
          "metadata": {
            "category": "warning",
            "validation_status": "PASSED_WITH_ISSUES",
            "issue_counts": {
              "WARNING": 3,
              "BEST_PRACTICE": 2
            }
          }
        },
        {
          "type": "notification",
          "message": "Validation passed - no issues found!",
          "stage": "evaluation",
          "status": "completed",
          "timestamp": "2025-10-15T10:07:00Z",
          "metadata": {
            "category": "success",
            "validation_status": "PASSED"
          }
        },
        {
          "type": "notification",
          "message": "Applying automatic corrections",
          "stage": "conversion",
          "status": "in_progress",
          "timestamp": "2025-10-15T10:10:00Z",
          "metadata": {
            "category": "info",
            "attempt_number": 2
          }
        },
        {
          "type": "notification",
          "message": "Applying improvements to resolve warnings",
          "stage": "conversion",
          "status": "in_progress",
          "timestamp": "2025-10-15T10:10:00Z",
          "metadata": {
            "category": "info",
            "attempt_number": 2,
            "validation_status": "PASSED_WITH_ISSUES"
          }
        },
        {
          "type": "notification",
          "message": "Awaiting your input for subject_id",
          "stage": null,
          "status": null,
          "timestamp": "2025-10-15T10:10:30Z",
          "metadata": {
            "category": "awaiting_user",
            "field_name": "subject_id",
            "prompt": "What is the subject ID? (e.g., 'mouse_001')"
          }
        },
        {
          "type": "notification",
          "message": "Reconverting with corrections",
          "stage": "conversion",
          "status": "in_progress",
          "timestamp": "2025-10-15T10:12:00Z",
          "metadata": {
            "category": "info",
            "attempt_number": 2
          }
        },
        {
          "type": "notification",
          "message": "Re-validating improved file",
          "stage": "evaluation",
          "status": "in_progress",
          "timestamp": "2025-10-15T10:17:00Z",
          "metadata": {
            "category": "info",
            "attempt_number": 2
          }
        },
        {
          "type": "notification",
          "message": "All warnings resolved!",
          "stage": "evaluation",
          "status": "completed",
          "timestamp": "2025-10-15T10:19:00Z",
          "metadata": {
            "category": "success",
            "validation_status": "PASSED",
            "previous_status": "PASSED_WITH_ISSUES",
            "attempt_number": 2
          }
        },
        {
          "type": "notification",
          "message": "All errors fixed!",
          "stage": "evaluation",
          "status": "completed",
          "timestamp": "2025-10-15T10:19:00Z",
          "metadata": {
            "category": "success",
            "validation_status": "PASSED",
            "previous_status": "FAILED",
            "attempt_number": 3
          }
        }
      ]
    },
    "error": {
      "description": "Error notifications (defensive error handling)",
      "examples": [
        {
          "type": "error",
          "message": "Conversion failed: Unsupported file format",
          "stage": "conversion",
          "status": "failed",
          "timestamp": "2025-10-15T10:03:00Z",
          "metadata": {
            "error_code": "UNSUPPORTED_FORMAT",
            "details": "NeuroConv could not detect any supported interface"
          }
        },
        {
          "type": "error",
          "message": "LLM API unavailable: Claude rate limit exceeded",
          "stage": "evaluation",
          "status": "failed",
          "timestamp": "2025-10-15T10:07:30Z",
          "metadata": {
            "error_code": "LLM_API_EXCEPTION",
            "http_status": 429,
            "retry_after": 60
          }
        }
      ]
    }
  },
  "connection_lifecycle": {
    "connect": {
      "description": "Client opens WebSocket connection to /ws",
      "timing": "When user navigates to conversion page"
    },
    "multiple_clients": {
      "description": "Multiple clients can watch same conversion (e.g., multiple browser tabs)",
      "behavior": "All connected clients receive same messages (broadcast)"
    },
    "disconnect": {
      "description": "Connection closes when conversion completes (success or failure)",
      "client_action": "Can reconnect if needed to watch new conversion"
    },
    "error_handling": {
      "description": "Client should handle disconnections and optionally reconnect",
      "fallback": "Poll /api/status endpoint if WebSocket unavailable"
    }
  },
  "client_implementation_example": {
    "language": "JavaScript (native WebSocket)",
    "code": "// Frontend WebSocket client (src/services/websocket.ts)\nconst ws = new WebSocket('ws://localhost:8080/ws');\n\nws.onmessage = (event) => {\n  const message = JSON.parse(event.data);\n  console.log(`[${message.type}] ${message.message}`);\n  \n  // Update UI based on message type\n  switch (message.type) {\n    case 'progress':\n      updateProgressBar(message);\n      break;\n    case 'stage_update':\n      updateStageIndicator(message);\n      break;\n    case 'notification':\n      showNotification(message);\n      break;\n    case 'error':\n      showError(message);\n      break;\n  }\n};\n\nws.onclose = () => {\n  console.log('Conversion complete or connection closed');\n};\n\nws.onerror = (error) => {\n  console.error('WebSocket error:', error);\n  // Fallback to polling /api/status\n};"
  },
  "timing_considerations": {
    "update_frequency": "No fixed interval - events sent when state changes",
    "latency_target": "< 1 second from event to client delivery",
    "message_order": "Guaranteed FIFO (first-in-first-out)",
    "duplicate_prevention": "No duplicate messages (each state change sends once)"
  }
}
