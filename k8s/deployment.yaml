apiVersion: apps/v1
kind: Deployment
metadata:
  name: agentic-mcp-server
  namespace: agentic-neurodata
  labels:
    app.kubernetes.io/name: agentic-neurodata-conversion
    app.kubernetes.io/component: mcp-server
    app.kubernetes.io/version: "0.1.0"
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: agentic-neurodata-conversion
      app.kubernetes.io/component: mcp-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: agentic-neurodata-conversion
        app.kubernetes.io/component: mcp-server
        app.kubernetes.io/version: "0.1.0"
    spec:
      containers:
        - name: mcp-server
          image: agentic-neurodata-conversion:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
              name: http
              protocol: TCP
          env:
            - name: AGENTIC_CONVERTER_ENV
              valueFrom:
                configMapKeyRef:
                  name: agentic-config
                  key: AGENTIC_CONVERTER_ENV
            - name: AGENTIC_CONVERTER_CONFIG_FILE
              valueFrom:
                configMapKeyRef:
                  name: agentic-config
                  key: AGENTIC_CONVERTER_CONFIG_FILE
            - name: AGENTIC_CONVERTER_LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: agentic-config
                  key: AGENTIC_CONVERTER_LOG_LEVEL
            - name: AGENTIC_CONVERTER_HTTP__HOST
              valueFrom:
                configMapKeyRef:
                  name: agentic-config
                  key: AGENTIC_CONVERTER_HTTP__HOST
            - name: AGENTIC_CONVERTER_HTTP__PORT
              valueFrom:
                configMapKeyRef:
                  name: agentic-config
                  key: AGENTIC_CONVERTER_HTTP__PORT
          volumeMounts:
            - name: config-volume
              mountPath: /app/config
              readOnly: true
            - name: data-volume
              mountPath: /app/data
            - name: temp-volume
              mountPath: /app/temp
            - name: logs-volume
              mountPath: /app/logs
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "4Gi"
              cpu: "2000m"
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: false
            capabilities:
              drop:
                - ALL
      volumes:
        - name: config-volume
          configMap:
            name: agentic-app-config
        - name: data-volume
          persistentVolumeClaim:
            claimName: agentic-data-pvc
        - name: temp-volume
          emptyDir:
            sizeLimit: 10Gi
        - name: logs-volume
          emptyDir:
            sizeLimit: 1Gi
      restartPolicy: Always
      securityContext:
        fsGroup: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: agentic-mcp-service
  namespace: agentic-neurodata
  labels:
    app.kubernetes.io/name: agentic-neurodata-conversion
    app.kubernetes.io/component: mcp-server
spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: 8000
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: agentic-neurodata-conversion
    app.kubernetes.io/component: mcp-server
